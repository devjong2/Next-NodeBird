{"ast":null,"code":"import { all, takeLatest, delay, put, fork, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', data);\n}\n\n;\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\n;\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\n;\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\n;\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction followAPI(data) {\n  return axios.post('/follow');\n}\n\n;\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction unFollowAPI() {\n  return axios.post('/unfollow');\n}\n\n;\n\nfunction* unFollow(action) {\n  try {\n    // const result = yield call(unFollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n;\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\n;\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n;\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n;\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n;\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n;\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\n;\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/user.js"],"names":["all","takeLatest","delay","put","fork","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","changeNicknameAPI","data","patch","changeNickname","action","result","type","err","error","response","loadMyInfoAPI","get","loadMyInfo","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unFollowAPI","unFollow","watchChangeNickname","CHANGE_NICKNAME_REQUEST","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import { all, takeLatest, delay, put, fork, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n\tLOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n\tLOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n\tSIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n\tFOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n\tUNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\n\tLOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n} from '../reducers/user';\n\nfunction changeNicknameAPI(data) {\n\treturn axios.patch('/user/nickname', data);\n};\n\nfunction* changeNickname(action) {\n\ttry {\n\t\tconst result = yield call(changeNicknameAPI, action.data);\n\t\tyield put({\n\t\t\ttype: CHANGE_NICKNAME_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: CHANGE_NICKNAME_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction loadMyInfoAPI() {\n\treturn axios.get('/user');\n};\n\nfunction* loadMyInfo(action) {\n\ttry {\n\t\tconst result = yield call(loadMyInfoAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOAD_MY_INFO_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_MY_INFO_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction logInAPI(data) {\n\treturn axios.post('/user/login', data);\n};\n\nfunction* logIn(action) {\n\ttry {\n\t\tconst result = yield call(logInAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction logOutAPI() {\n\treturn axios.post('/user/logout');\n};\n\nfunction* logOut() {\n\ttry {\n\t\tyield call(logOutAPI);\n\t\tyield put({\n\t\t\ttype: LOG_OUT_SUCCESS,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOG_OUT_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction signUpAPI(data) {\n\treturn axios.post('/user', data);\n};\n\nfunction* signUp(action) {\n\ttry {\n\t\tconst result = yield call(signUpAPI, action.data);\n\t\tconsole.log(result);\n\t\tyield put({\n\t\t\ttype: SIGN_UP_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: SIGN_UP_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction followAPI(data) {\n\treturn axios.post('/follow');\n};\n\nfunction* follow(action) {\n\ttry {\n\t\t// const result = yield call(followAPI);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: FOLLOW_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: FOLLOW_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction unFollowAPI() {\n\treturn axios.post('/unfollow');\n};\n\nfunction* unFollow(action) {\n\ttry {\n\t\t// const result = yield call(unFollowAPI);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: UNFOLLOW_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UNFOLLOW_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchChangeNickname() {\n\tyield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n};\n\nfunction* watchLoadMyInfo() {\n\tyield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n};\n\nfunction* watchLogIn() {\n\tyield takeLatest(LOG_IN_REQUEST, logIn);\n};\n\nfunction* watchLogOut() {\n\tyield takeLatest(LOG_OUT_REQUEST, logOut);\n};\n\nfunction* watchSignUp() {\n\tyield takeLatest(SIGN_UP_REQUEST, signUp);\n};\n\nfunction* watchFollow() {\n\tyield takeLatest(FOLLOW_REQUEST, follow);\n};\n\nfunction* watchUnFollow() {\n\tyield takeLatest(UNFOLLOW_REQUEST, unFollow);\n};\n\nexport default function* userSaga() {\n\tyield all([\n\t\tfork(watchChangeNickname),\n\t\tfork(watchLoadMyInfo),\n\t\tfork(watchLogIn),\n\t\tfork(watchLogOut),\n\t\tfork(watchSignUp),\n\t\tfork(watchFollow),\n\t\tfork(watchUnFollow),\n\t])\n};"]},"metadata":{},"sourceType":"module"}