{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePostLoading = true;\n        draft.unLikePostDone = false;\n        draft.unLikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n          draft.unLikePostLoading = false;\n          draft.unLikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePostLoading = false;\n        draft.unLikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      // \tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n      // \tconst post = { ...state.mainPosts[postIndex] };\n      // \tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n      // \tconst mainPosts = [...state.mainPosts];\n      // \tmainPosts[postIndex] = post;\n      // \treturn {\n      // \t\t...state,\n      // \t\tmainPosts,\n      // \t\taddCommentLoading: false,\n      // \t\taddCommentDone: true,\n      // \t};\n      // }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false, draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","post","find","v","id","PostId","Likers","push","UserId","error","filter","concat","length","unshift","removePostLoading","removePostDone","removePostError","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nexport const initialState = {\n\tmainPosts: [],\n\timagePaths: [],\n\thasMorePosts: true,\n\n\tlikePostLoading: false,\n\tlikePostDone: false,\n\tlikePostError: null,\n\n\tunLikePostLoading: false,\n\tunLikePostDone: false,\n\tunLikePostError: null,\n\n\tloadPostsLoading: false,\n\tloadPostsDone: false,\n\tloadPostsError: null,\n\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n};\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = (data) => ({\n\ttype: ADD_POST_REQUEST,\n\tdata,\n});\n\nexport const addComment = (data) => ({\n\ttype: ADD_COMMENT_REQUEST,\n\tdata,\n});\n\nconst reducer = (state = initialState, action) => {\n\treturn produce(state, (draft) => {\n\t\tswitch (action.type) {\n\t\t\tcase LIKE_POST_REQUEST:\n\t\t\t\tdraft.likePostLoading = true;\n\t\t\t\tdraft.likePostDone = false;\n\t\t\t\tdraft.likePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase LIKE_POST_SUCCESS: {\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Likers.push({ id: action.data.UserId });\n\t\t\t\tdraft.likePostLoading = false;\n\t\t\t\tdraft.likePostDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LIKE_POST_FAILURE:\n\t\t\t\tdraft.likePostLoading = false;\n\t\t\t\tdraft.likePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase UNLIKE_POST_REQUEST:\n\t\t\t\tdraft.unLikePostLoading = true;\n\t\t\t\tdraft.unLikePostDone = false;\n\t\t\t\tdraft.unLikePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase UNLIKE_POST_SUCCESS: {\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n\t\t\t\tdraft.unLikePostLoading = false;\n\t\t\t\tdraft.unLikePostDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase UNLIKE_POST_FAILURE:\n\t\t\t\tdraft.unLikePostLoading = false;\n\t\t\t\tdraft.unLikePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_REQUEST:\n\t\t\t\tdraft.loadPostsLoading = true;\n\t\t\t\tdraft.loadPostsDone = false;\n\t\t\t\tdraft.loadPostsError = null;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_SUCCESS:\n\t\t\t\tdraft.loadPostsLoading = false;\n\t\t\t\tdraft.loadPostsDone = true;\n\t\t\t\tdraft.mainPosts = action.data.concat(draft.mainPosts);\n\t\t\t\tdraft.hasMorePosts = draft.mainPosts.length < 50;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_FAILURE:\n\t\t\t\tdraft.loadPostsLoading = false;\n\t\t\t\tdraft.loadPostsError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_REQUEST:\n\t\t\t\tdraft.addPostLoading = true;\n\t\t\t\tdraft.addPostDone = false;\n\t\t\t\tdraft.addPostError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_SUCCESS:\n\t\t\t\tdraft.addPostLoading = false;\n\t\t\t\tdraft.addPostDone = true;\n\t\t\t\tdraft.mainPosts.unshift(action.data);\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_FAILURE:\n\t\t\t\tdraft.addPostLoading = false;\n\t\t\t\tdraft.addPostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_REQUEST:\n\t\t\t\tdraft.removePostLoading = true;\n\t\t\t\tdraft.removePostDone = false;\n\t\t\t\tdraft.removePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_SUCCESS:\n\t\t\t\tdraft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\n\t\t\t\tdraft.removePostLoading = false;\n\t\t\t\tdraft.removePostDone = true;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_FAILURE:\n\t\t\t\tdraft.removePostLoading = false;\n\t\t\t\tdraft.removePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_REQUEST:\n\t\t\t\tdraft.addCommentLoading = true;\n\t\t\t\tdraft.addCommentDone = false;\n\t\t\t\tdraft.addCommentError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_SUCCESS:\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Comments.unshift(action.data);\n\t\t\t\tdraft.addCommentLoading = false;\n\t\t\t\tdraft.addCommentDone = true;\n\t\t\t\tbreak;\n\t\t\t// \tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n\t\t\t// \tconst post = { ...state.mainPosts[postIndex] };\n\t\t\t// \tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n\t\t\t// \tconst mainPosts = [...state.mainPosts];\n\t\t\t// \tmainPosts[postIndex] = post;\n\t\t\t// \treturn {\n\t\t\t// \t\t...state,\n\t\t\t// \t\tmainPosts,\n\t\t\t// \t\taddCommentLoading: false,\n\t\t\t// \t\taddCommentDone: true,\n\t\t\t// \t};\n\t\t\t// }\n\t\t\tcase ADD_COMMENT_FAILURE:\n\t\t\t\tdraft.addCommentLoading = false,\n\t\t\t\tdraft.addCommentError = action.error;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t};\n\t});\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}