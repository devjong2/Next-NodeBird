{"ast":null,"code":"import { all, takeLatest, delay, put, fork, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction uploadImagesAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\n;\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\n;\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\n;\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\n;\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\n;\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\n;\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchUploadImages() {\n  yield throttle(5000, UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\n;\n\nfunction* watchLikePost() {\n  yield throttle(5000, LIKE_POST_REQUEST, likePost);\n}\n\n;\n\nfunction* watchUnLikePost() {\n  yield throttle(5000, UNLIKE_POST_REQUEST, unLikePost);\n}\n\n;\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n;\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\n;\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchUploadImages), fork(watchLikePost), fork(watchUnLikePost), fork(watchLoadPosts), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/post.js"],"names":["all","takeLatest","delay","put","fork","throttle","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","ADD_POST_TO_ME","REMOVE_POST_OF_ME","uploadImagesAPI","data","patch","uploadImages","action","result","type","err","error","response","likePostAPI","likePost","unLikePostAPI","delete","unLikePost","loadPostsAPI","get","loadPosts","addPostAPI","post","content","addPost","id","removePostAPI","removePost","addCommentAPI","postId","addComment","console","watchUploadImages","watchLikePost","watchUnLikePost","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga"],"mappings":"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","sourcesContent":["import { all, takeLatest, delay, put, fork, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n\tADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n\tREMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\n\tLOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\n\tLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE,\n\tUNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction uploadImagesAPI(data) {\n\treturn axios.patch(`/post/${data}/like`);\n};\n\nfunction* uploadImages(action) {\n\ttry {\n\t\tconst result = yield call(uploadImagesAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction likePostAPI(data) {\n\treturn axios.patch(`/post/${data}/like`);\n};\n\nfunction* likePost(action) {\n\ttry {\n\t\tconst result = yield call(likePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction unLikePostAPI(data) {\n\treturn axios.delete(`/post/${data}/like`);\n};\n\nfunction* unLikePost(action) {\n\ttry {\n\t\tconst result = yield call(unLikePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: UNLIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UNLIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction loadPostsAPI() {\n\treturn axios.get('/posts');\n};\n\nfunction* loadPosts(action) {\n\ttry {\n\t\tconst result = yield call(loadPostsAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOAD_POSTS_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_POSTS_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addPostAPI(data) {\n\treturn axios.post('/post', { content: data });\n};\n\nfunction* addPost(action) {\n\ttry {\n\t\tconst result = yield call(addPostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: ADD_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: ADD_POST_TO_ME,\n\t\t\tdata: result.data.id,\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: ADD_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction removePostAPI(data) {\n\treturn axios.delete(`/post/${data}`);\n};\n\nfunction* removePost(action) {\n\ttry {\n\t\tconst result = yield call(removePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_OF_ME,\n\t\t\tdata: result.data,\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addCommentAPI(data) {\n\treturn axios.post(`/post/${data.postId}/comment`, data);\n};\n\nfunction* addComment(action) {\n\ttry {\n\t\tconst result = yield call(addCommentAPI, action.data);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchUploadImages() {\n\tyield throttle(5000, UPLOAD_IMAGES_REQUEST, uploadImages);\n};\n\nfunction* watchLikePost() {\n\tyield throttle(5000, LIKE_POST_REQUEST, likePost);\n};\n\nfunction* watchUnLikePost() {\n\tyield throttle(5000, UNLIKE_POST_REQUEST, unLikePost);\n};\n\nfunction* watchLoadPosts() {\n\tyield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n};\n\nfunction* watchAddPost() {\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\n};\n\nfunction* watchRemovePost() {\n\tyield takeLatest(REMOVE_POST_REQUEST, removePost);\n};\n\nfunction* watchAddComment() {\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\n};\n\nexport default function* postSaga() {\n\tyield all([\n\t\tfork(watchUploadImages),\n\t\tfork(watchLikePost),\n\t\tfork(watchUnLikePost),\n\t\tfork(watchLoadPosts),\n\t\tfork(watchAddPost),\n\t\tfork(watchRemovePost),\n\t\tfork(watchAddComment),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}