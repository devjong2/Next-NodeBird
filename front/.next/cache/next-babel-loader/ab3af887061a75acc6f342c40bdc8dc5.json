{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(unLikePost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLikePost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, takeLatest, delay, put, fork, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction likePostAPI() {\n  return axios.patch(/post/);\n}\n\n;\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\n;\n\nfunction unLikePostAPI() {\n  return axios.patch('/posts');\n}\n\n;\n\nfunction unLikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unLikePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(unLikePostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\n;\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\n;\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostsAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\n;\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\n;\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context4.next = 14;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 14;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 10]]);\n}\n\n;\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"]('/api/post', data);\n}\n\n;\n\nfunction removePost(action) {\n  return _regeneratorRuntime.wrap(function removePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context5.next = 7;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\n;\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 13;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\n;\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return throttle(5000, LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\n;\n\nfunction watchUnLikePost() {\n  return _regeneratorRuntime.wrap(function watchUnLikePost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return throttle(5000, UNLIKE_POST_REQUEST, unLikePost);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\n;\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\n;\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\n;\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\n;\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\n;\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchLikePost), fork(watchUnLikePost), fork(watchLoadPosts), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/post.js"],"names":["likePost","unLikePost","loadPosts","addPost","removePost","addComment","watchLikePost","watchUnLikePost","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga","all","takeLatest","delay","put","fork","throttle","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","likePostAPI","patch","action","data","result","type","error","response","unLikePostAPI","loadPostsAPI","get","addPostAPI","post","content","id","removePostAPI","addCommentAPI","postId","console"],"mappings":"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","sourcesContent":["import { all, takeLatest, delay, put, fork, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n\tADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n\tREMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\n\tLOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\n\tLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE,\n\tUNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction likePostAPI() {\n\treturn axios.patch(/post/);\n};\n\nfunction* likePost(action) {\n\ttry {\n\t\tconst result = yield call(likePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction unLikePostAPI() {\n\treturn axios.patch('/posts');\n};\n\nfunction* unLikePost(action) {\n\ttry {\n\t\tconst result = yield call(unLikePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: UNLIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UNLIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction loadPostsAPI() {\n\treturn axios.get('/posts');\n};\n\nfunction* loadPosts(action) {\n\ttry {\n\t\tconst result = yield call(loadPostsAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOAD_POSTS_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_POSTS_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addPostAPI(data) {\n\treturn axios.post('/post', { content: data });\n};\n\nfunction* addPost(action) {\n\ttry {\n\t\tconst result = yield call(addPostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: ADD_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: ADD_POST_TO_ME,\n\t\t\tdata: result.data.id,\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: ADD_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction removePostAPI(data) {\n\treturn axios.delete('/api/post', data);\n};\n\nfunction* removePost(action) {\n\ttry {\n\t\t// const result = yield call(addPostAPI, action.data);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_OF_ME,\n\t\t\tdata: action.data,\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addCommentAPI(data) {\n\treturn axios.post(`/post/${data.postId}/comment`, data);\n};\n\nfunction* addComment(action) {\n\ttry {\n\t\tconst result = yield call(addCommentAPI, action.data);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchLikePost() {\n\tyield throttle(5000, LIKE_POST_REQUEST, likePost);\n};\n\nfunction* watchUnLikePost() {\n\tyield throttle(5000, UNLIKE_POST_REQUEST, unLikePost);\n};\n\nfunction* watchLoadPosts() {\n\tyield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n};\n\nfunction* watchAddPost() {\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\n};\n\nfunction* watchRemovePost() {\n\tyield takeLatest(REMOVE_POST_REQUEST, removePost);\n};\n\nfunction* watchAddComment() {\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\n};\n\nexport default function* postSaga() {\n\tyield all([\n\t\tfork(watchLikePost),\n\t\tfork(watchUnLikePost),\n\t\tfork(watchLoadPosts),\n\t\tfork(watchAddPost),\n\t\tfork(watchRemovePost),\n\t\tfork(watchAddComment),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}