{"ast":null,"code":"import { all, takeLatest, delay, put, fork, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE } from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n  return axios.post('/user');\n}\n\n;\n\nfunction* loadMyInfo(action) {\n  try {\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_MY_INFO_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\n\n;\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\n;\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction followAPI(data) {\n  return axios.post('/follow');\n}\n\n;\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction unFollowAPI() {\n  return axios.post('/unfollow');\n}\n\n;\n\nfunction* unFollow(action) {\n  try {\n    // const result = yield call(unFollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\n;\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n;\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n;\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n;\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n;\n\nfunction* watchUnFollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unFollow);\n}\n\n;\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/user.js"],"names":["all","takeLatest","delay","put","fork","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","loadMyInfoAPI","post","loadMyInfo","action","result","data","type","err","error","response","logInAPI","logIn","logOutAPI","logOut","signUpAPI","signUp","console","log","followAPI","follow","unFollowAPI","unFollow","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import { all, takeLatest, delay, put, fork, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n\tLOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n\tLOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n\tSIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\n\tFOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\n\tUNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\n} from '../reducers/user';\n\nfunction loadMyInfoAPI() {\n\treturn axios.post('/user');\n};\n\nfunction* loadMyInfo(action) {\n\ttry {\n\t\tconst result = yield call(loadMyInfoAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOAD_MY_INFO_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_MY_INFO_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction logInAPI(data) {\n\treturn axios.post('/user/login', data);\n};\n\nfunction* logIn(action) {\n\ttry {\n\t\tconst result = yield call(logInAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOG_IN_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOG_IN_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction logOutAPI() {\n\treturn axios.post('/user/logout');\n};\n\nfunction* logOut() {\n\ttry {\n\t\tyield call(logOutAPI);\n\t\tyield put({\n\t\t\ttype: LOG_OUT_SUCCESS,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOG_OUT_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction signUpAPI(data) {\n\treturn axios.post('/user', data);\n};\n\nfunction* signUp(action) {\n\ttry {\n\t\tconst result = yield call(signUpAPI, action.data);\n\t\tconsole.log(result);\n\t\tyield put({\n\t\t\ttype: SIGN_UP_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: SIGN_UP_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction followAPI(data) {\n\treturn axios.post('/follow');\n};\n\nfunction* follow(action) {\n\ttry {\n\t\t// const result = yield call(followAPI);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: FOLLOW_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: FOLLOW_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction unFollowAPI() {\n\treturn axios.post('/unfollow');\n};\n\nfunction* unFollow(action) {\n\ttry {\n\t\t// const result = yield call(unFollowAPI);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: UNFOLLOW_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UNFOLLOW_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchLoadMyInfo() {\n\tyield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n};\n\nfunction* watchLogIn() {\n\tyield takeLatest(LOG_IN_REQUEST, logIn);\n};\n\nfunction* watchLogOut() {\n\tyield takeLatest(LOG_OUT_REQUEST, logOut);\n};\n\nfunction* watchSignUp() {\n\tyield takeLatest(SIGN_UP_REQUEST, signUp);\n};\n\nfunction* watchFollow() {\n\tyield takeLatest(FOLLOW_REQUEST, follow);\n};\n\nfunction* watchUnFollow() {\n\tyield takeLatest(UNFOLLOW_REQUEST, unFollow);\n};\n\nexport default function* userSaga() {\n\tyield all([\n\t\tfork(watchLoadMyInfo),\n\t\tfork(watchLogIn),\n\t\tfork(watchLogOut),\n\t\tfork(watchSignUp),\n\t\tfork(watchFollow),\n\t\tfork(watchUnFollow),\n\t])\n};"]},"metadata":{},"sourceType":"module"}