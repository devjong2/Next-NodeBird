{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimwoojong/Desktop/Dev/prepare/front/components/PostCard.js\";\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Popover, Avatar, List, Comment } from 'antd';\nimport { RetweetOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined, HeartOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    removePostLoading\n  } = useSelector(state => state.post);\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }, this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 18\n            }, this),\n            content: item.content\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Popover","Avatar","List","Comment","RetweetOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","HeartOutlined","PropTypes","useSelector","useDispatch","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","id","state","user","me","removePostLoading","liked","setLiked","commentFormOpened","setCommentFormOpened","onLike","type","LIKE_POST_REQUEST","data","onToggleComment","prev","onRemovePost","marginBottom","Images","onUnLike","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Card, Button, Popover, Avatar, List, Comment } from 'antd';\nimport {\n\tRetweetOutlined,\n\tHeartTwoTone,\n\tMessageOutlined,\n\tEllipsisOutlined,\n\tHeartOutlined,\n} from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport FollowButton from './FollowButton';\n\nconst PostCard = ({ post }) => {\n\tconst dispatch = useDispatch();\n\tconst id = useSelector((state) => state.user.me?.id);\n\tconst { removePostLoading } = useSelector((state) => state.post);\n\n\tconst [liked, setLiked] = useState(false);\n\tconst [commentFormOpened, setCommentFormOpened] = useState(false);\n\n\tconst onLike = useCallback(() => {\n\t\tdispatch({\n\t\t\ttype: LIKE_POST_REQUEST,\n\t\t\tdata: post.id,\n\t\t});\n\t}, []);\n\n\tconst onToggleComment = useCallback(() => {\n\t\tsetCommentFormOpened((prev) => !prev);\n\t}, []);\n\n\tconst onRemovePost = useCallback(() => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_POST_REQUEST,\n\t\t\tdata: post.id,\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div style={{ marginBottom: 20 }}>\n\t\t\t<Card\n\t\t\t\tcover={post.Images[0] && <PostImages images={post.Images} />}\n\t\t\t\tactions={[\n\t\t\t\t\t<RetweetOutlined key={post.id} />,\n\t\t\t\t\tliked\n\t\t\t\t\t\t? <HeartTwoTone twoToneColor=\"#eb2f96\" key={post.id} onClick={onUnLike} />\n\t\t\t\t\t\t: <HeartOutlined key={post.id} onClick={onLike} />,\n\t\t\t\t\t<MessageOutlined key={post.id} onClick={onToggleComment} />,\n\t\t\t\t\t<Popover key={post.id} content={(\n\t\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t\t{id && post.User.id === id ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<Button>수정</Button>\n\t\t\t\t\t\t\t\t\t<Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : <Button>신고</Button>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t)}>\n\t\t\t\t\t\t<EllipsisOutlined />\n\t\t\t\t\t</Popover>\n\t\t\t\t]}\n\t\t\t\textra={id && <FollowButton post={post} />}\n\t\t\t>\n\t\t\t\t<Card.Meta\n\t\t\t\t\tavatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n\t\t\t\t\ttitle={post.User.nickname}\n\t\t\t\t\tdescription={<PostCardContent postData={post.content} />}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t\t{commentFormOpened && (\n\t\t\t\t<div>\n\t\t\t\t\t<CommentForm post={post} />\n\t\t\t\t\t<List\n\t\t\t\t\t\tkey={post.id}\n\t\t\t\t\t\theader={`${post.Comments.length}개의 댓글`}\n\t\t\t\t\t\titemLayout=\"horizontal\"\n\t\t\t\t\t\tdataSource={post.Comments}\n\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\tauthor={item.User.nickname}\n\t\t\t\t\t\t\t\t\tavatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n\t\t\t\t\t\t\t\t\tcontent={item.content}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nPostCard.propTypes = {\n\tpost: PropTypes.shape({\n\t\tid: PropTypes.number,\n\t\tUser: PropTypes.object,\n\t\tcontent: PropTypes.string,\n\t\tcreatedAt: PropTypes.string,\n\t\tComments: PropTypes.arrayOf(PropTypes.object),\n\t\tImages: PropTypes.arrayOf(PropTypes.object),\n\t}).isRequired,\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}