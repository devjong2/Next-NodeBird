{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(unLikePost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLikePost),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, takeLatest, delay, put, fork, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction uploadImagesAPI(data) {\n  return axios.patch('/post/images', data);\n}\n\n;\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\n;\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\n;\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\n;\n\nfunction unLikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\n;\n\nfunction unLikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unLikePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(unLikePostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\n;\n\nfunction loadPostsAPI() {\n  return axios.get('/posts');\n}\n\n;\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadPostsAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\n;\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\n;\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 14;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\n\n;\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\n;\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: result.data\n          });\n\n        case 8:\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 14;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\n;\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\n;\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return throttle(5000, UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\n;\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return throttle(5000, LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\n;\n\nfunction watchUnLikePost() {\n  return _regeneratorRuntime.wrap(function watchUnLikePost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return throttle(5000, UNLIKE_POST_REQUEST, unLikePost);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\n;\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\n;\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\n;\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\n;\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\n;\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchUploadImages), fork(watchLikePost), fork(watchUnLikePost), fork(watchLoadPosts), fork(watchAddPost), fork(watchRemovePost), fork(watchAddComment)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/post.js"],"names":["uploadImages","likePost","unLikePost","loadPosts","addPost","removePost","addComment","watchUploadImages","watchLikePost","watchUnLikePost","watchLoadPosts","watchAddPost","watchRemovePost","watchAddComment","postSaga","all","takeLatest","delay","put","fork","throttle","call","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","uploadImagesAPI","data","patch","action","result","type","error","response","likePostAPI","unLikePostAPI","loadPostsAPI","get","addPostAPI","post","content","id","removePostAPI","addCommentAPI","postId","console"],"mappings":"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","sourcesContent":["import { all, takeLatest, delay, put, fork, throttle, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n\tADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n\tREMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE,\n\tLOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE,\n\tLIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_FAILURE,\n\tUNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_FAILURE,\n\tUPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction uploadImagesAPI(data) {\n\treturn axios.patch('/post/images', data);\n};\n\nfunction* uploadImages(action) {\n\ttry {\n\t\tconst result = yield call(uploadImagesAPI, action.data);\n\t\tyield put({\n\t\t\ttype: UPLOAD_IMAGES_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UPLOAD_IMAGES_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction likePostAPI(data) {\n\treturn axios.patch(`/post/${data}/like`);\n};\n\nfunction* likePost(action) {\n\ttry {\n\t\tconst result = yield call(likePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction unLikePostAPI(data) {\n\treturn axios.delete(`/post/${data}/like`);\n};\n\nfunction* unLikePost(action) {\n\ttry {\n\t\tconst result = yield call(unLikePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: UNLIKE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: UNLIKE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction loadPostsAPI() {\n\treturn axios.get('/posts');\n};\n\nfunction* loadPosts(action) {\n\ttry {\n\t\tconst result = yield call(loadPostsAPI, action.data);\n\t\tyield put({\n\t\t\ttype: LOAD_POSTS_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: LOAD_POSTS_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addPostAPI(data) {\n\treturn axios.post('/post', { content: data });\n};\n\nfunction* addPost(action) {\n\ttry {\n\t\tconst result = yield call(addPostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: ADD_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: ADD_POST_TO_ME,\n\t\t\tdata: result.data.id,\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: ADD_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction removePostAPI(data) {\n\treturn axios.delete(`/post/${data}`);\n};\n\nfunction* removePost(action) {\n\ttry {\n\t\tconst result = yield call(removePostAPI, action.data);\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_OF_ME,\n\t\t\tdata: result.data,\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: REMOVE_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addCommentAPI(data) {\n\treturn axios.post(`/post/${data.postId}/comment`, data);\n};\n\nfunction* addComment(action) {\n\ttry {\n\t\tconst result = yield call(addCommentAPI, action.data);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_SUCCESS,\n\t\t\tdata: result.data,\n\t\t});\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchUploadImages() {\n\tyield throttle(5000, UPLOAD_IMAGES_REQUEST, uploadImages);\n};\n\nfunction* watchLikePost() {\n\tyield throttle(5000, LIKE_POST_REQUEST, likePost);\n};\n\nfunction* watchUnLikePost() {\n\tyield throttle(5000, UNLIKE_POST_REQUEST, unLikePost);\n};\n\nfunction* watchLoadPosts() {\n\tyield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n};\n\nfunction* watchAddPost() {\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\n};\n\nfunction* watchRemovePost() {\n\tyield takeLatest(REMOVE_POST_REQUEST, removePost);\n};\n\nfunction* watchAddComment() {\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\n};\n\nexport default function* postSaga() {\n\tyield all([\n\t\tfork(watchUploadImages),\n\t\tfork(watchLikePost),\n\t\tfork(watchUnLikePost),\n\t\tfork(watchLoadPosts),\n\t\tfork(watchAddPost),\n\t\tfork(watchRemovePost),\n\t\tfork(watchAddComment),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}