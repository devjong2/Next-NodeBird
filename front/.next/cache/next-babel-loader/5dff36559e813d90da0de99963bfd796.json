{"ast":null,"code":"import { all, takeLatest, delay, put, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\n;\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\n;\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS' // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\n;\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\n;\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/user.js"],"names":["all","takeLatest","delay","put","fork","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACvB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACA;;AAAA;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACvB,MAAI;AACH;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAE,gBADG;AAETJ,MAAAA,IAAI,EAAEG,MAAM,CAACH,IAFJ,CAGT;;AAHS,KAAD,CAAT;AAKA,GARD,CAQE,OAAOK,GAAP,EAAY;AACb,UAAMT,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAE,gBADG;AAETJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFV,KAAD,CAAT;AAIA;AACD;;AAAA;;AAED,SAASO,SAAT,GAAqB;AACpB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACA;;AAAA;;AAED,UAAUO,MAAV,GAAmB;AAClB,MAAI;AACH;AACA,UAAMb,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAE,iBADG,CAET;;AAFS,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOC,GAAP,EAAY;AACb,UAAMT,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAE,iBADG;AAETJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFV,KAAD,CAAT;AAIA;AACD;;AAAA;;AAED,UAAUS,UAAV,GAAuB;AACtB,QAAMf,UAAU,CAAC,gBAAD,EAAmBQ,KAAnB,CAAhB;AACA;;AAAA;;AACD,UAAUQ,WAAV,GAAwB;AACvB,QAAMhB,UAAU,CAAC,iBAAD,EAAoBc,MAApB,CAAhB;AACA;;AAAA;AAED,eAAe,UAAUG,QAAV,GAAqB;AACnC,QAAMlB,GAAG,CAAC,CACTI,IAAI,CAACY,UAAD,CADK,EAETZ,IAAI,CAACa,WAAD,CAFK,CAAD,CAAT;AAIA;AAAA","sourcesContent":["import { all, takeLatest, delay, put, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n\treturn axios.post('/api/login', data);\n};\n\nfunction* logIn(action) {\n\ttry {\n\t\t// const result = yield call(logInAPI, action.data);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_IN_SUCCESS',\n\t\t\tdata: action.data,\n\t\t\t// data: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: 'LOG_IN_FAILURE',\n\t\t\tdata: err.response.data,\n\t\t});\n\t}\n};\n\nfunction logOutAPI() {\n\treturn axios.post('/api/logout');\n};\n\nfunction* logOut() {\n\ttry {\n\t\t// const result = yield call(logOutAPI);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_SUCCESS',\n\t\t\t// data: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: 'LOG_OUT_FAILURE',\n\t\t\tdata: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchLogIn() {\n\tyield takeLatest('LOG_IN_REQUEST', logIn);\n};\nfunction* watchLogOut() {\n\tyield takeLatest('LOG_OUT_REQUEST', logOut);\n};\n\nexport default function* userSaga() {\n\tyield all([\n\t\tfork(watchLogIn),\n\t\tfork(watchLogOut),\n\t])\n};"]},"metadata":{},"sourceType":"module"}