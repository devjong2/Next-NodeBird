{"ast":null,"code":"import shortid from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortid.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        var post = draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        });\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      // \tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n      // \tconst post = { ...state.mainPosts[postIndex] };\n      // \tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n      // \tconst mainPosts = [...state.mainPosts];\n      // \tmainPosts[postIndex] = post;\n      // \treturn {\n      // \t\t...state,\n      // \t\tmainPosts,\n      // \t\taddCommentLoading: false,\n      // \t\taddCommentDone: true,\n      // \t};\n      // }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false, draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/reducers/post.js"],"names":["shortid","produce","faker","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","concat","length","error","unshift","removePostLoading","removePostDone","removePostError","filter","v","post","find","PostId"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC3BC,EAAAA,SAAS,EAAE,EADgB;AAE3BC,EAAAA,UAAU,EAAE,EAFe;AAG3BC,EAAAA,YAAY,EAAE,IAHa;AAI3BC,EAAAA,gBAAgB,EAAE,KAJS;AAK3BC,EAAAA,aAAa,EAAE,KALY;AAM3BC,EAAAA,cAAc,EAAE,IANW;AAQ3BC,EAAAA,cAAc,EAAE,KARW;AAS3BC,EAAAA,WAAW,EAAE,KATc;AAU3BC,EAAAA,YAAY,EAAE,IAVa;AAY3BC,EAAAA,iBAAiB,EAAE,KAZQ;AAa3BC,EAAAA,cAAc,EAAE,KAbW;AAc3BC,EAAAA,eAAe,EAAE;AAdU,CAArB;AAiBP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD;AAAA,SAAYC,KAAK,CAACD,MAAD,CAAL,CAAcE,IAAd,GAAqBC,GAArB,CAAyB;AAAA,WAAO;AAC5EC,MAAAA,EAAE,EAAErB,OAAO,CAACsB,QAAR,EADwE;AAE5EC,MAAAA,IAAI,EAAE;AACLF,QAAAA,EAAE,EAAErB,OAAO,CAACsB,QAAR,EADC;AAELE,QAAAA,QAAQ,EAAEtB,KAAK,CAACuB,IAAN,CAAWC,QAAX;AAFL,OAFsE;AAM5EC,MAAAA,OAAO,EAAEzB,KAAK,CAAC0B,KAAN,CAAYC,SAAZ,EANmE;AAO5EC,MAAAA,MAAM,EAAE,CAAC;AACRC,QAAAA,GAAG,EAAE7B,KAAK,CAAC8B,KAAN,CAAYA,KAAZ;AADG,OAAD,CAPoE;AAU5EC,MAAAA,QAAQ,EAAE,CAAC;AACVV,QAAAA,IAAI,EAAE;AACLF,UAAAA,EAAE,EAAErB,OAAO,CAACsB,QAAR,EADC;AAELE,UAAAA,QAAQ,EAAEtB,KAAK,CAACuB,IAAN,CAAWC,QAAX;AAFL,SADI;AAKVC,QAAAA,OAAO,EAAEzB,KAAK,CAAC0B,KAAN,CAAYM,QAAZ;AALC,OAAD;AAVkE,KAAP;AAAA,GAAzB,CAAZ;AAAA,CAA1B;AAmBP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAW;AACjCC,IAAAA,IAAI,EAAEX,gBAD2B;AAEjCU,IAAAA,IAAI,EAAJA;AAFiC,GAAX;AAAA,CAAhB;AAKP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACF,IAAD;AAAA,SAAW;AACpCC,IAAAA,IAAI,EAAEL,mBAD8B;AAEpCI,IAAAA,IAAI,EAAJA;AAFoC,GAAX;AAAA,CAAnB;;AAKP,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBjD,YAAyB;AAAA,MAAXkD,MAAW;AACjD,SAAOpD,OAAO,CAACmD,KAAD,EAAQ,UAACE,KAAD,EAAW;AAChC,YAAQD,MAAM,CAACJ,IAAf;AACC,WAAKd,kBAAL;AACCmB,QAAAA,KAAK,CAAC/C,gBAAN,GAAyB,IAAzB;AACA+C,QAAAA,KAAK,CAAC9C,aAAN,GAAsB,KAAtB;AACA8C,QAAAA,KAAK,CAAC7C,cAAN,GAAuB,IAAvB;AACA;;AACD,WAAK2B,kBAAL;AACCkB,QAAAA,KAAK,CAAC/C,gBAAN,GAAyB,KAAzB;AACA+C,QAAAA,KAAK,CAAC9C,aAAN,GAAsB,IAAtB;AACA8C,QAAAA,KAAK,CAAClD,SAAN,GAAkBiD,MAAM,CAACL,IAAP,CAAYO,MAAZ,CAAmBD,KAAK,CAAClD,SAAzB,CAAlB;AACAkD,QAAAA,KAAK,CAAChD,YAAN,GAAqBgD,KAAK,CAAClD,SAAN,CAAgBoD,MAAhB,GAAyB,EAA9C;AACA;;AACD,WAAKnB,kBAAL;AACCiB,QAAAA,KAAK,CAAC/C,gBAAN,GAAyB,KAAzB;AACA+C,QAAAA,KAAK,CAAC7C,cAAN,GAAuB4C,MAAM,CAACI,KAA9B;AACA;;AACD,WAAKnB,gBAAL;AACCgB,QAAAA,KAAK,CAAC5C,cAAN,GAAuB,IAAvB;AACA4C,QAAAA,KAAK,CAAC3C,WAAN,GAAoB,KAApB;AACA2C,QAAAA,KAAK,CAAC1C,YAAN,GAAqB,IAArB;AACA;;AACD,WAAK2B,gBAAL;AACCe,QAAAA,KAAK,CAAC5C,cAAN,GAAuB,KAAvB;AACA4C,QAAAA,KAAK,CAAC3C,WAAN,GAAoB,IAApB;AACA2C,QAAAA,KAAK,CAAClD,SAAN,CAAgBsD,OAAhB,CAAwBL,MAAM,CAACL,IAA/B;AACA;;AACD,WAAKR,gBAAL;AACCc,QAAAA,KAAK,CAAC5C,cAAN,GAAuB,KAAvB;AACA4C,QAAAA,KAAK,CAAC1C,YAAN,GAAqByC,MAAM,CAACI,KAA5B;AACA;;AACD,WAAKhB,mBAAL;AACCa,QAAAA,KAAK,CAACK,iBAAN,GAA0B,IAA1B;AACAL,QAAAA,KAAK,CAACM,cAAN,GAAuB,KAAvB;AACAN,QAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACA;;AACD,WAAKnB,mBAAL;AACCY,QAAAA,KAAK,CAAClD,SAAN,GAAkBkD,KAAK,CAAClD,SAAN,CAAgB0D,MAAhB,CAAuB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAAC1C,EAAF,KAASgC,MAAM,CAACL,IAAvB;AAAA,SAAvB,CAAlB;AACAM,QAAAA,KAAK,CAACK,iBAAN,GAA0B,KAA1B;AACAL,QAAAA,KAAK,CAACM,cAAN,GAAuB,IAAvB;AACA;;AACD,WAAKjB,mBAAL;AACCW,QAAAA,KAAK,CAACK,iBAAN,GAA0B,KAA1B;AACAL,QAAAA,KAAK,CAACO,eAAN,GAAwBR,MAAM,CAACI,KAA/B;AACA;;AACD,WAAKb,mBAAL;AACCU,QAAAA,KAAK,CAACzC,iBAAN,GAA0B,IAA1B;AACAyC,QAAAA,KAAK,CAACxC,cAAN,GAAuB,KAAvB;AACAwC,QAAAA,KAAK,CAACvC,eAAN,GAAwB,IAAxB;AACA;;AACD,WAAK8B,mBAAL;AACC,YAAMmB,IAAI,GAAGV,KAAK,CAAClD,SAAN,CAAgB6D,IAAhB,CAAqB,UAACF,CAAD;AAAA,iBAAOA,CAAC,CAAC1C,EAAF,KAASgC,MAAM,CAACL,IAAP,CAAYkB,MAA5B;AAAA,SAArB,CAAb;AACAF,QAAAA,IAAI,CAAC/B,QAAL,CAAcyB,OAAd,CAAsBL,MAAM,CAACL,IAA7B;AACAM,QAAAA,KAAK,CAACzC,iBAAN,GAA0B,KAA1B;AACAyC,QAAAA,KAAK,CAACxC,cAAN,GAAuB,IAAvB;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAKgC,mBAAL;AACCQ,QAAAA,KAAK,CAACzC,iBAAN,GAA0B,KAA1B,EACAyC,KAAK,CAACvC,eAAN,GAAwBsC,MAAM,CAACI,KAD/B;AAEA;;AACD;AACC;AAxEF;;AAyEC;AACD,GA3Ea,CAAd;AA4EA,CA7ED;;AA+EA,eAAeN,OAAf","sourcesContent":["import shortid from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\n\nexport const initialState = {\n\tmainPosts: [],\n\timagePaths: [],\n\thasMorePosts: true,\n\tloadPostsLoading: false,\n\tloadPostsDone: false,\n\tloadPostsError: null,\n\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n};\n\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\n\tid: shortid.generate(),\n\tUser: {\n\t\tid: shortid.generate(),\n\t\tnickname: faker.name.findName(),\n\t},\n\tcontent: faker.lorem.paragraph(),\n\tImages: [{\n\t\tsrc: faker.image.image(),\n\t}],\n\tComments: [{\n\t\tUser: {\n\t\t\tid: shortid.generate(),\n\t\t\tnickname: faker.name.findName(),\n\t\t},\n\t\tcontent: faker.lorem.sentence(),\n\t}],\n}));\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const addPost = (data) => ({\n\ttype: ADD_POST_REQUEST,\n\tdata,\n});\n\nexport const addComment = (data) => ({\n\ttype: ADD_COMMENT_REQUEST,\n\tdata,\n});\n\nconst reducer = (state = initialState, action) => {\n\treturn produce(state, (draft) => {\n\t\tswitch (action.type) {\n\t\t\tcase LOAD_POSTS_REQUEST:\n\t\t\t\tdraft.loadPostsLoading = true;\n\t\t\t\tdraft.loadPostsDone = false;\n\t\t\t\tdraft.loadPostsError = null;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_SUCCESS:\n\t\t\t\tdraft.loadPostsLoading = false;\n\t\t\t\tdraft.loadPostsDone = true;\n\t\t\t\tdraft.mainPosts = action.data.concat(draft.mainPosts);\n\t\t\t\tdraft.hasMorePosts = draft.mainPosts.length < 50;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_FAILURE:\n\t\t\t\tdraft.loadPostsLoading = false;\n\t\t\t\tdraft.loadPostsError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_REQUEST:\n\t\t\t\tdraft.addPostLoading = true;\n\t\t\t\tdraft.addPostDone = false;\n\t\t\t\tdraft.addPostError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_SUCCESS:\n\t\t\t\tdraft.addPostLoading = false;\n\t\t\t\tdraft.addPostDone = true;\n\t\t\t\tdraft.mainPosts.unshift(action.data);\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_FAILURE:\n\t\t\t\tdraft.addPostLoading = false;\n\t\t\t\tdraft.addPostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_REQUEST:\n\t\t\t\tdraft.removePostLoading = true;\n\t\t\t\tdraft.removePostDone = false;\n\t\t\t\tdraft.removePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_SUCCESS:\n\t\t\t\tdraft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\n\t\t\t\tdraft.removePostLoading = false;\n\t\t\t\tdraft.removePostDone = true;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_FAILURE:\n\t\t\t\tdraft.removePostLoading = false;\n\t\t\t\tdraft.removePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_REQUEST:\n\t\t\t\tdraft.addCommentLoading = true;\n\t\t\t\tdraft.addCommentDone = false;\n\t\t\t\tdraft.addCommentError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_SUCCESS:\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Comments.unshift(action.data);\n\t\t\t\tdraft.addCommentLoading = false;\n\t\t\t\tdraft.addCommentDone = true;\n\t\t\t\tbreak;\n\t\t\t// \tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n\t\t\t// \tconst post = { ...state.mainPosts[postIndex] };\n\t\t\t// \tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n\t\t\t// \tconst mainPosts = [...state.mainPosts];\n\t\t\t// \tmainPosts[postIndex] = post;\n\t\t\t// \treturn {\n\t\t\t// \t\t...state,\n\t\t\t// \t\tmainPosts,\n\t\t\t// \t\taddCommentLoading: false,\n\t\t\t// \t\taddCommentDone: true,\n\t\t\t// \t};\n\t\t\t// }\n\t\t\tcase ADD_COMMENT_FAILURE:\n\t\t\t\tdraft.addCommentLoading = false,\n\t\t\t\tdraft.addCommentError = action.error;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t};\n\t});\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}