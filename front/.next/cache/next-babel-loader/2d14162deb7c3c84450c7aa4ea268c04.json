{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimwoojong/Desktop/Dev/prepare/front/components/PostForm.js\";\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n\n    const formData = new FormData();\n    imagePaths.forEach(i => {\n      formData.append('image', i);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      maxLength: 140,\n      placeholder: \"\\uD558\\uACE0\\uC2F6\\uC740 \\uB9D0\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694.\",\n      value: text,\n      onChange: onChangeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map((v, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '200px'\n          },\n          src: `http://localhost:3065/${v}`,\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => onRemoveImage(i),\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","useInput","PostForm","dispatch","imagePaths","addPostDone","state","post","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","i","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n\tconst dispatch = useDispatch();\n\tconst { imagePaths, addPostDone } = useSelector((state) => state.post);\n\tconst [text, onChangeText, setText] = useInput('');\n\n\tuseEffect(() => {\n\t\tif (addPostDone) {\n\t\t\tsetText('');\n\t\t}\n\t}, [addPostDone]);\n \n\tconst onSubmit = useCallback(() => {\n\t\tif (!text || !text.trim()) {\n\t\t\treturn alert('게시글을 작성하세요.');\n\t\t}\n\t\tconst formData = new FormData();\n\t\timagePaths.forEach((i) => {\n\t\t\tformData.append('image', i);\n\t\t});\n\t\tformData.append('content', text);\n\t\treturn dispatch({\n\t\t\ttype: ADD_POST_REQUEST,\n\t\t\tdata: formData,\n\t\t});\n\t}, [text, imagePaths]);\n\n\tconst imageInput = useRef();\n\tconst onClickImageUpload = useCallback(() => {\n\t\timageInput.current.click();\n\t}, [imageInput.current]);\n\n\tconst onChangeImages = useCallback((e) => {\n\t\tconsole.log('images', e.target.files);\n\t\tconst imageFormData = new FormData();\n\t\t[].forEach.call(e.target.files, (f) => {\n\t\t\timageFormData.append('image', f);\n\t\t});\n\t\tdispatch({\n\t\t\ttype: UPLOAD_IMAGES_REQUEST,\n\t\t\tdata: imageFormData,\n\t\t});\n\t}, []);\n\n\tconst onRemoveImage = useCallback((index) => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_IMAGE,\n\t\t\tdata: index,\n\t\t})\n\t}, []);\n\n\treturn (\n\t\t<Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n\t\t\t<Input.TextArea\n\t\t\t\tmaxLength={140}\n\t\t\t\tplaceholder=\"하고싶은 말을 남겨주세요.\"\n\t\t\t\tvalue={text}\n\t\t\t\tonChange={onChangeText}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tname=\"image\"\n\t\t\t\t\tmultiple\n\t\t\t\t\thidden\n\t\t\t\t\tref={imageInput}\n\t\t\t\t\tonChange={onChangeImages}\t\n\t\t\t\t/>\n\t\t\t\t<Button onClick={onClickImageUpload}>이미지 업로드</Button>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tstyle={{ float: 'right' }}\n\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t>\n\t\t\t\t\t짹짹\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{imagePaths.map((v, i) => (\n\t\t\t\t\t<div style={{ display: 'inline-block' }} key={v}>\n\t\t\t\t\t\t<img style={{ width: '200px' }} src={`http://localhost:3065/${v}`} alt={v} />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={() => onRemoveImage(i)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t제거\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</Form>\n\t);\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}