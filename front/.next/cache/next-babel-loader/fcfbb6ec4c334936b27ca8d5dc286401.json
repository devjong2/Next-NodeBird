{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/kimwoojong/Desktop/Dev/prepare/front/components/CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 4,\n        value: commentText,\n        onChange: onChangeCommentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: 0\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(CommentForm, \"mM6CS628luhUq9CAqU3Lfmbq6g4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","useInput","Form","Input","Button","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,EAAE,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AAFgC,qBAGLN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACH,IAAjB;AAAA,GAAD,CAHN;AAAA,MAGxBM,cAHwB,gBAGxBA,cAHwB;;AAAA,kBAK2Bf,QAAQ,CAAC,EAAD,CALnC;AAAA;AAAA,MAKzBgB,WALyB;AAAA,MAKZC,mBALY;AAAA,MAKSC,cALT;;AAOhCnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgB,cAAJ,EAAoB;AACrBG,MAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AACD,GAJS,EAIP,CAACH,cAAD,CAJO,CAAT;AAMD,MAAMI,eAAe,GAAGrB,WAAW,CAAC,YAAM;AACzCY,IAAAA,QAAQ,CAAC;AACRU,MAAAA,IAAI,EAAEb,mBADE;AAERc,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEN,WAAX;AAAwBO,QAAAA,MAAM,EAAEd,IAAI,CAACE,EAArC;AAAyCa,QAAAA,MAAM,EAAEb;AAAjD;AAFE,KAAD,CAAR;AAIA,GALkC,EAKhC,CAACK,WAAD,EAAcL,EAAd,CALgC,CAAnC;AAOA,sBACC,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEQ,eAAhB;AAAA,2BACC,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEM,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACC,QAAC,KAAD,CAAO,QAAP;AACC,QAAA,IAAI,EAAE,CADP;AAEC,QAAA,KAAK,EAAEV,WAFR;AAGC,QAAA,QAAQ,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,eADD,eAMC,QAAC,MAAD;AACC,QAAA,KAAK,EAAE;AAAEQ,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE;AAA1C,SADR;AAEC,QAAA,IAAI,EAAC,SAFN;AAGC,QAAA,QAAQ,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,WADD;AAkBA,CAtCD;;GAAMpB,W;UACaF,W,EACND,W,EACgBA,W,EAEgCL,Q;;;KALvDQ,W;AAwCNA,WAAW,CAACqB,SAAZ,GAAwB;AACvBpB,EAAAA,IAAI,EAAEL,SAAS,CAAC0B,MAAV,CAAiBC;AADA,CAAxB;AAIA,eAAevB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport useInput from '../hooks/useInput';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone } = useSelector((state) => state.post);\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n\n  useEffect(() => {\n    if (addCommentDone) {\n\t\t\tsetCommentText('');\n\t\t}\n\t}, [addCommentDone]);\n\n\tconst onSubmitComment = useCallback(() => {\n\t\tdispatch({\n\t\t\ttype: ADD_COMMENT_REQUEST,\n\t\t\tdata: { content: commentText, postId: post.id, userId: id, }\n\t\t});\n\t}, [commentText, id])\t\n\n\treturn (\n\t\t<Form onFinish={onSubmitComment}>\n\t\t\t<Form.Item style={{ position: 'relative', margin: 0 }}>\n\t\t\t\t<Input.TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tvalue={commentText}\n\t\t\t\t\tonChange={onChangeCommentText}\n\t\t\t\t/>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ position: 'absolute', right: 0, bottom: 0,  }}\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t>\n\t\t\t\t\t삐약\n\t\t\t\t</Button>\n\t\t\t</Form.Item>\n\t\t</Form>\n\t);\n};\n\nCommentForm.propTypes = {\n\tpost: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}