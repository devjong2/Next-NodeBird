{"ast":null,"code":"import { all, takeLatest, delay, put, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: 'ADD_POST_SUCCESS' // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'ADD_POST_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/post.js"],"names":["all","takeLatest","delay","put","fork","axios","addPostAPI","data","post","addPost","action","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACzB,SAAOF,KAAK,CAACG,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACA;;AAAA;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACzB,MAAI;AACH;AACA,UAAMR,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAE,kBADG,CAET;;AAFS,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOC,GAAP,EAAY;AACb,UAAMT,GAAG,CAAC;AACTQ,MAAAA,IAAI,EAAE,kBADG;AAETJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFV,KAAD,CAAT;AAIA;AACD;;AAAA;;AAED,UAAUO,YAAV,GAAyB;AACxB,QAAMb,UAAU,CAAC,kBAAD,EAAqBQ,OAArB,CAAhB;AACA;;AAAA;AAED,eAAe,UAAUM,QAAV,GAAqB;AACnC,QAAMf,GAAG,CAAC,CACTI,IAAI,CAACU,YAAD,CADK,CAAD,CAAT;AAGA;AAAA","sourcesContent":["import { all, takeLatest, delay, put, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction addPostAPI(data) {\n\treturn axios.post('/api/post', data);\n};\n\nfunction* addPost(action) {\n\ttry {\n\t\t// const result = yield call(addPostAPI, action.data);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: 'ADD_POST_SUCCESS',\n\t\t\t// data: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: 'ADD_POST_FAILURE',\n\t\t\tdata: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchAddPost() {\n\tyield takeLatest('ADD_POST_REQUEST', addPost);\n};\n\nexport default function* postSaga() {\n\tyield all([\n\t\tfork(watchAddPost),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}