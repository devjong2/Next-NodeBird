{"ast":null,"code":"import { all, takeLatest, delay, put, fork } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\n;\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\n;\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS // data: result.data,\n\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n;\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n;\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\n;\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/sagas/post.js"],"names":["all","takeLatest","delay","put","fork","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPostAPI","data","post","addPost","action","type","err","error","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,KAA1B,EAAiCC,GAAjC,EAAsCC,IAAtC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACCC,gBADD,EACmBC,gBADnB,EACqCC,gBADrC,EAECC,mBAFD,EAEsBC,mBAFtB,EAE2CC,mBAF3C,QAGO,kBAHP;AAIA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACzB,SAAOT,KAAK,CAACU,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACA;;AAAA;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACzB,MAAI;AACH;AACA,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACTe,MAAAA,IAAI,EAAEX,gBADG;AAETO,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFJ,KAAD,CAAT;AAIA,UAAMX,GAAG,CAAC;AACTe,MAAAA,IAAI,EAAEN;AADG,KAAD,CAAT;AAIA,GAXD,CAWE,OAAOO,GAAP,EAAY;AACb,UAAMhB,GAAG,CAAC;AACTe,MAAAA,IAAI,EAAEV,gBADG;AAETY,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAIA;AACD;;AAAA;;AAED,SAASQ,aAAT,CAAuBR,IAAvB,EAA6B;AAC5B,SAAOT,KAAK,CAACU,IAAN,CAAY,aAAYD,IAAI,CAACS,MAAO,UAApC,EAA+CT,IAA/C,CAAP;AACA;;AAAA;;AAED,UAAUU,UAAV,CAAqBP,MAArB,EAA6B;AAC5B,MAAI;AACH;AACA,UAAMf,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACTe,MAAAA,IAAI,EAAER,mBADG,CAET;;AAFS,KAAD,CAAT;AAIA,GAPD,CAOE,OAAOS,GAAP,EAAY;AACb,UAAMhB,GAAG,CAAC;AACTe,MAAAA,IAAI,EAAEP,mBADG;AAETS,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAIA;AACD;;AAAA;;AAED,UAAUW,YAAV,GAAyB;AACxB,QAAMxB,UAAU,CAACK,gBAAD,EAAmBU,OAAnB,CAAhB;AACA;;AAAA;;AAED,UAAUU,eAAV,GAA4B;AAC3B,QAAMzB,UAAU,CAACQ,mBAAD,EAAsBe,UAAtB,CAAhB;AACA;;AAAA;AAED,eAAe,UAAUG,QAAV,GAAqB;AACnC,QAAM3B,GAAG,CAAC,CACTI,IAAI,CAACqB,YAAD,CADK,EAETrB,IAAI,CAACsB,eAAD,CAFK,CAAD,CAAT;AAIA;AAAA","sourcesContent":["import { all, takeLatest, delay, put, fork } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {\n\tADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\n\tADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n} from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user';\n\nfunction addPostAPI(data) {\n\treturn axios.post('/api/post', data);\n};\n\nfunction* addPost(action) {\n\ttry {\n\t\t// const result = yield call(addPostAPI, action.data);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: ADD_POST_SUCCESS,\n\t\t\tdata: action.data,\n\t\t});\n\t\tyield put({\n\t\t\ttype: ADD_POST_TO_ME,\n\t\t\t\n\t\t})\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: ADD_POST_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction addCommentAPI(data) {\n\treturn axios.post(`/api/post/${data.postId}/comment`, data);\n};\n\nfunction* addComment(action) {\n\ttry {\n\t\t// const result = yield call(addCommentAPI, action.data);\n\t\tyield delay(1000);\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_SUCCESS,\n\t\t\t// data: result.data,\n\t\t});\n\t} catch (err) {\n\t\tyield put({\n\t\t\ttype: ADD_COMMENT_FAILURE,\n\t\t\terror: err.response.data,\n\t\t});\n\t}\n};\n\nfunction* watchAddPost() {\n\tyield takeLatest(ADD_POST_REQUEST, addPost);\n};\n\nfunction* watchAddComment() {\n\tyield takeLatest(ADD_COMMENT_REQUEST, addComment);\n};\n\nexport default function* postSaga() {\n\tyield all([\n\t\tfork(watchAddPost),\n\t\tfork(watchAddComment),\n\t]);\n};"]},"metadata":{},"sourceType":"module"}