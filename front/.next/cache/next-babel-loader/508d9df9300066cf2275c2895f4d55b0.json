{"ast":null,"code":"import produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.index);\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = action.data;\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePostLoading = true;\n        draft.unLikePostDone = false;\n        draft.unLikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n          draft.unLikePostLoading = false;\n          draft.unLikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePostLoading = false;\n        draft.unLikePostError = action.error;\n        break;\n\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      // \tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n      // \tconst post = { ...state.mainPosts[postIndex] };\n      // \tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n      // \tconst mainPosts = [...state.mainPosts];\n      // \tmainPosts[postIndex] = post;\n      // \treturn {\n      // \t\t...state,\n      // \t\tmainPosts,\n      // \t\taddCommentLoading: false,\n      // \t\taddCommentDone: true,\n      // \t};\n      // }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false, draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n\n    ;\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kimwoojong/Desktop/Dev/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","uploadImagesLoading","uploadImagesDone","uploadImagesError","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","filter","v","i","index","error","post","find","id","PostId","Likers","push","UserId","concat","length","unshift","removePostLoading","removePostDone","removePostError","Comments"],"mappings":"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","sourcesContent":["import produce from 'immer';\n\nexport const initialState = {\n\tmainPosts: [],\n\timagePaths: [],\n\thasMorePosts: true,\n\n\tuploadImagesLoading: false,\n\tuploadImagesDone: false,\n\tuploadImagesError: null,\n\n\tlikePostLoading: false,\n\tlikePostDone: false,\n\tlikePostError: null,\n\n\tunLikePostLoading: false,\n\tunLikePostDone: false,\n\tunLikePostError: null,\n\n\tloadPostsLoading: false,\n\tloadPostsDone: false,\n\tloadPostsError: null,\n\n\taddPostLoading: false,\n\taddPostDone: false,\n\taddPostError: null,\n\n\taddCommentLoading: false,\n\taddCommentDone: false,\n\taddCommentError: null,\n};\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\nexport const addPost = (data) => ({\n\ttype: ADD_POST_REQUEST,\n\tdata,\n});\n\nexport const addComment = (data) => ({\n\ttype: ADD_COMMENT_REQUEST,\n\tdata,\n});\n\nconst reducer = (state = initialState, action) => {\n\treturn produce(state, (draft) => {\n\t\tswitch (action.type) {\n\t\t\tcase REMOVE_IMAGE:\n\t\t\t\tdraft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.index);\n\t\t\t\t\n\t\t\tcase UPLOAD_IMAGES_REQUEST:\n\t\t\t\tdraft.uploadImagesLoading = true;\n\t\t\t\tdraft.uploadImagesDone = false;\n\t\t\t\tdraft.uploadImagesError = null;\n\t\t\t\tbreak;\n\t\t\tcase UPLOAD_IMAGES_SUCCESS: {\n\t\t\t\tdraft.imagePaths = action.data;\n\t\t\t\tdraft.uploadImagesLoading = false;\n\t\t\t\tdraft.uploadImagesDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase UPLOAD_IMAGES_FAILURE:\n\t\t\t\tdraft.uploadImagesLoading = false;\n\t\t\t\tdraft.uploadImagesError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase LIKE_POST_REQUEST:\n\t\t\t\tdraft.likePostLoading = true;\n\t\t\t\tdraft.likePostDone = false;\n\t\t\t\tdraft.likePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase LIKE_POST_SUCCESS: {\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Likers.push({ id: action.data.UserId });\n\t\t\t\tdraft.likePostLoading = false;\n\t\t\t\tdraft.likePostDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase LIKE_POST_FAILURE:\n\t\t\t\tdraft.likePostLoading = false;\n\t\t\t\tdraft.likePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase UNLIKE_POST_REQUEST:\n\t\t\t\tdraft.unLikePostLoading = true;\n\t\t\t\tdraft.unLikePostDone = false;\n\t\t\t\tdraft.unLikePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase UNLIKE_POST_SUCCESS: {\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n\t\t\t\tdraft.unLikePostLoading = false;\n\t\t\t\tdraft.unLikePostDone = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase UNLIKE_POST_FAILURE:\n\t\t\t\tdraft.unLikePostLoading = false;\n\t\t\t\tdraft.unLikePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_REQUEST:\n\t\t\t\tdraft.loadPostsLoading = true;\n\t\t\t\tdraft.loadPostsDone = false;\n\t\t\t\tdraft.loadPostsError = null;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_SUCCESS:\n\t\t\t\tdraft.loadPostsLoading = false;\n\t\t\t\tdraft.loadPostsDone = true;\n\t\t\t\tdraft.mainPosts = action.data.concat(draft.mainPosts);\n\t\t\t\tdraft.hasMorePosts = draft.mainPosts.length < 50;\n\t\t\t\tbreak;\n\t\t\tcase LOAD_POSTS_FAILURE:\n\t\t\t\tdraft.loadPostsLoading = false;\n\t\t\t\tdraft.loadPostsError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_REQUEST:\n\t\t\t\tdraft.addPostLoading = true;\n\t\t\t\tdraft.addPostDone = false;\n\t\t\t\tdraft.addPostError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_SUCCESS:\n\t\t\t\tdraft.addPostLoading = false;\n\t\t\t\tdraft.addPostDone = true;\n\t\t\t\tdraft.mainPosts.unshift(action.data);\n\t\t\t\tbreak;\n\t\t\tcase ADD_POST_FAILURE:\n\t\t\t\tdraft.addPostLoading = false;\n\t\t\t\tdraft.addPostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_REQUEST:\n\t\t\t\tdraft.removePostLoading = true;\n\t\t\t\tdraft.removePostDone = false;\n\t\t\t\tdraft.removePostError = null;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_SUCCESS:\n\t\t\t\tdraft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\n\t\t\t\tdraft.removePostLoading = false;\n\t\t\t\tdraft.removePostDone = true;\n\t\t\t\tbreak;\n\t\t\tcase REMOVE_POST_FAILURE:\n\t\t\t\tdraft.removePostLoading = false;\n\t\t\t\tdraft.removePostError = action.error;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_REQUEST:\n\t\t\t\tdraft.addCommentLoading = true;\n\t\t\t\tdraft.addCommentDone = false;\n\t\t\t\tdraft.addCommentError = null;\n\t\t\t\tbreak;\n\t\t\tcase ADD_COMMENT_SUCCESS:\n\t\t\t\tconst post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n\t\t\t\tpost.Comments.unshift(action.data);\n\t\t\t\tdraft.addCommentLoading = false;\n\t\t\t\tdraft.addCommentDone = true;\n\t\t\t\tbreak;\n\t\t\t// \tconst postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n\t\t\t// \tconst post = { ...state.mainPosts[postIndex] };\n\t\t\t// \tpost.Comments = [dummyComment(action.data.content), ...post.Comments];\n\t\t\t// \tconst mainPosts = [...state.mainPosts];\n\t\t\t// \tmainPosts[postIndex] = post;\n\t\t\t// \treturn {\n\t\t\t// \t\t...state,\n\t\t\t// \t\tmainPosts,\n\t\t\t// \t\taddCommentLoading: false,\n\t\t\t// \t\taddCommentDone: true,\n\t\t\t// \t};\n\t\t\t// }\n\t\t\tcase ADD_COMMENT_FAILURE:\n\t\t\t\tdraft.addCommentLoading = false,\n\t\t\t\tdraft.addCommentError = action.error;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t};\n\t});\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}